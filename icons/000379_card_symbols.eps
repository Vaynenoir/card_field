%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 100 90 501 641 
%%LanguageLevel: 2
%%Creator: CorelDRAW X6
%%Title: 000379_card_symbols.eps
%%CreationDate: Thu Aug 27 09:09:53 2015
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW X6 Version 16.3.0.1114
/EpsFile true def
%%BeginResource: procset wCorel16Dict 16.0 0
/wCorel16Dict 300 dict def wCorel16Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9 dict copy begin
/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk def/ColorSpace
DocCmykSpace def/separate_color{currentdict false SeparationPlateIndex 0 ge
SeparationPlateIndex 3 le and{color SeparationPlateIndex get dup 0 gt{3 1 roll
pop pop SeparateInColor{0 0 0 4 SeparationPlateIndex roll create_cmyk_color
true}{1 exch sub create_grayscale_color true}ifelse}{pop}ifelse}if}bd
/convert_to_cmyk{currentdict}bd currentdict end def/create_cmyk_color{
CmykColorSpec 9 dict copy begin 4 array astore/color exch def/ColorSpace
DocCmykSpace def currentdict end}bd/SpotColorSpec ColorSpec 9 dict copy begin
/num 1 def/ColorModel/Spot def/set_color{ColorSeparationLevel1{color aload pop
get_cmyk_alternative_color/color get aload pop names aload pop
findcmykcustomcolor exch setcustomcolor}{ColorSpace safe_setcolorspace color
aload pop setcolor}ifelse}bd/separate_color{currentdict false
SeparationPlateIndex 4 eq{names aload pop SeparationPlateName eq{color aload
pop dup 0 gt{3 1 roll pop pop SeparateInColor{pop convert_to_cmyk true}{1 exch
sub create_grayscale_color true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{
/alternativeSpace ColorSpace 2 get def/tintTransformProc ColorSpace 3 get def
alternativeSpace DocCmykSpace eq{color aload pop tintTransformProc
create_cmyk_color}{alternativeSpace DocRgbSpace eq{color aload pop
tintTransformProc create_rgb_color/convert_to_cmyk dexec}{alternativeSpace
DocGrayScaleSpace eq{0 0 0 color aload pop 1 sub create_cmyk_color}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd/get_cmyk_alternative_color{
/alternativeSpace ColorSpace 2 get def alternativeSpace DocCmykSpace eq{
alternativeColor aload pop create_cmyk_color}{alternativeSpace DocRgbSpace eq{
alternativeColor aload pop create_rgb_color/convert_to_cmyk dexec}{
alternativeSpace DocGrayScaleSpace eq{alternativeColor aload pop
create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1 create_cmyk_color}ifelse
}ifelse}ifelse}bd currentdict end def/create_spot_colorspace{load
/alternativeSpace xd/alternativeColor xd/name xd[/Separation name
alternativeSpace[alternativeColor alternativeSpace/spot_tint_transform_proc cvx
]cvx]}bd/create_spot_color{SpotColorSpec 9 dict copy begin dup type/arraytype
ne{create_spot_colorspace}if/ColorSpace xd/color exch 1 array astore def
ColorSpace 1 get 1 array astore/names xd currentdict end}bd/DevicenColorSpec
SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def/set_color{Level3{
ColorSpace safe_setcolorspace color aload pop setcolor}{ColorSpace 2 get
setcolorspace color aload pop ColorSpace 3 get exec setcolor}ifelse}bd
/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup names
exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex 0 ge
{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel16Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 612 792
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
100.30224 481.03710 233.31402 640.68350 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
166.80841 481.03710 m
209.98403 481.03710 L
209.98403 483.12624 L
176.90570 493.57219 169.08180 522.04592 168.46243 533.26630 C
168.22233 537.61550 169.44605 535.85036 170.29020 534.04951 C
179.12239 515.21046 199.43887 515.16000 202.32369 515.16000 C
213.23395 515.16000 233.46680 525.89679 233.31288 547.54214 C
233.13883 571.99918 213.14353 576.13493 190.80539 603.58139 C
180.50117 616.24176 169.20964 633.13540 166.80841 640.68350 C
164.40690 633.13540 153.11537 616.24176 142.81115 603.58139 C
120.47301 576.13493 100.47742 571.99918 100.30337 547.54214 C
100.14945 525.89679 120.38258 515.16000 131.29257 515.16000 C
134.17767 515.16000 154.49386 515.21046 163.32633 534.04951 C
164.17049 535.85036 165.39449 537.61550 165.15439 533.26630 C
164.53502 522.04592 156.71083 493.57219 123.63250 483.12624 C
123.63250 481.03710 L
166.80841 481.03710 L
@c
F

@rax %Note: Object
352.83373 478.05591 500.46718 621.85946 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
426.56372 478.05591 m
432.83083 495.46573 446.84532 512.87528 467.38885 533.07043 C
488.28331 553.61055 500.46718 566.49657 500.46718 586.34362 C
500.46718 606.19068 484.45030 621.85946 464.95134 621.85946 C
445.45266 621.85946 433.96214 611.76161 426.65074 592.61102 C
419.33849 611.76161 407.84825 621.85946 388.34929 621.85946 C
368.85061 621.85946 352.83373 606.19068 352.83373 586.34362 C
352.83373 566.49657 365.01761 553.61055 385.91206 533.07043 C
406.45559 512.87528 420.29603 495.46573 426.56372 478.05591 C
@c
F

@rax %Note: Object
362.47408 203.02356 498.09543 362.66995 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
430.11099 203.02356 m
475.28844 203.02356 L
475.28844 204.76460 L
473.43402 204.99647 456.57836 211.01357 447.43294 220.78148 C
437.71493 231.16082 436.16693 238.63294 434.55005 244.19735 C
432.78151 250.28447 432.19984 257.68998 432.33024 258.12510 C
432.80901 256.81946 433.80057 254.78164 435.15921 252.81524 C
441.20098 244.07320 449.52321 237.35140 466.06139 237.14646 C
479.64246 236.97808 498.11839 250.20539 498.09515 270.05046 C
498.07247 289.23534 483.78387 304.26917 465.36491 304.43443 C
462.29216 304.46192 458.02545 304.07839 452.90381 302.64293 C
453.68674 303.35414 454.79906 304.47099 455.70246 305.65304 C
456.90265 307.22343 464.32035 315.43172 464.32035 329.59134 C
464.32035 342.70639 453.29386 362.71106 430.02369 362.66967 C
406.40428 362.62772 395.55269 341.60400 395.55269 329.41729 C
395.55269 315.25767 402.38532 307.35836 403.82220 306.00113 C
405.07370 304.81909 406.01225 303.70252 406.79490 302.99102 C
405.52243 303.29348 404.59663 303.68353 403.38709 303.91200 C
385.49877 307.29430 362.40690 296.98951 362.47436 269.35455 C
362.52369 249.04375 382.20406 236.97241 395.20431 236.97241 C
410.17691 236.97241 418.84611 243.55106 424.88787 252.81524 C
426.19380 254.81735 427.23808 256.73244 427.71713 258.03808 C
427.84753 257.60296 426.95291 250.36668 425.49732 244.19735 C
423.55502 235.96554 420.51713 229.37443 412.26605 220.78148 C
401.69707 209.77455 388.24753 205.46192 384.75865 204.76460 C
384.75865 203.02356 L
429.93694 203.02356 L
430.11099 203.02356 L
@c
F

@rax %Note: Object
107.69159 202.09861 229.55868 381.76583 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
168.62542 202.09861 m
165.57279 215.96882 152.26044 273.13002 107.69159 291.93222 C
152.26044 310.73471 165.57279 367.89562 168.62542 381.76583 C
171.67805 367.89562 184.99011 310.73471 229.55868 291.93222 C
184.99011 273.13002 171.67805 215.96882 168.62542 202.09861 C
@c
F

@rax %Note: Object
106.71052 90.39005 157.18904 140.86857 @E
/$fm 0 def
 0 O 0 @g
0.0000 0.7412 0.9490  create_rgb_color set_solid_fill
112.37981 140.86857 m
151.51975 140.86857 l
154.63786 140.86857 157.18904 138.31739 157.18904 135.19928 c
157.18904 96.05934 l
157.18904 92.94123 154.63786 90.39005 151.51975 90.39005 c
112.37981 90.39005 l
109.26170 90.39005 106.71052 92.94123 106.71052 96.05934 c
106.71052 135.19928 l
106.71052 138.31739 109.26170 140.86857 112.37981 140.86857 c
@c
F

@rax %Note: Object
118.05250 101.73175 145.84734 129.52658 @E
/$fm 0 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
120.88715 129.52658 m
143.01241 129.52658 l
144.57146 129.52658 145.84734 128.25071 145.84734 126.69194 c
145.84734 104.56668 l
145.84734 103.00762 144.57146 101.73175 143.01241 101.73175 c
120.88715 101.73175 l
119.32838 101.73175 118.05250 103.00762 118.05250 104.56668 c
118.05250 126.69194 l
118.05250 128.25071 119.32838 129.52658 120.88715 129.52658 c
@c
F

@rax %Note: Object
165.77773 101.62885 433.39238 129.46649 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
182.75669 103.04731 m
182.75669 102.66208 182.56706 102.40554 182.17587 102.26466 C
181.79065 102.13030 180.98362 101.98970 179.76699 101.84287 C
178.55008 101.70227 177.34564 101.62885 176.14743 101.62885 c
173.03528 101.62885 170.52236 102.57647 168.62712 104.47795 C
166.72564 106.37943 165.77773 109.16759 165.77773 112.84214 c
165.77773 118.23477 l
165.77773 121.10230 166.30356 123.36463 167.35521 125.03367 C
168.40687 126.69676 169.70910 127.85216 171.26220 128.50044 C
172.80907 129.14220 174.44154 129.46649 176.14743 129.46649 c
177.32126 129.46649 178.52570 129.39307 179.76076 129.25247 C
180.99581 129.10564 181.80283 128.96504 182.18806 128.81820 C
182.56706 128.67761 182.75669 128.41483 182.75669 128.03556 c
182.75669 125.57792 l
182.75669 125.06428 182.51206 124.80746 182.02309 124.80746 c
181.95562 124.80746 L
179.67515 124.99710 177.76148 125.09490 176.22085 125.09490 c
172.67443 125.09490 170.90135 122.80819 170.90135 118.23477 c
170.90135 112.84214 l
170.90135 108.26872 172.67443 105.98202 176.22085 105.98202 c
177.08287 105.98202 178.03672 106.01887 179.08809 106.09228 C
181.95562 106.28787 L
182.02309 106.28787 l
182.51206 106.28787 182.75669 106.03106 182.75669 105.51742 c
182.75669 103.04731 l
@c
202.60913 102.90076 m
202.60913 102.56428 202.47477 102.34431 202.21172 102.22809 C
201.94894 102.11811 201.10507 101.98970 199.68661 101.84287 C
198.26816 101.70227 196.91717 101.62885 195.63931 101.62885 c
192.53310 101.62885 190.34447 102.24652 189.07257 103.48157 C
187.80094 104.72258 187.16513 106.60592 187.16513 109.13698 c
187.16513 128.44545 l
187.16513 128.64699 187.23855 128.81820 187.37915 128.96504 C
187.52570 129.10564 187.69691 129.17906 187.89874 129.17906 c
191.51830 129.17906 l
191.72013 129.17906 191.89729 129.10564 192.03789 128.96504 c
192.18472 128.81820 192.25191 128.64699 192.25191 128.44545 c
192.25191 109.13698 l
192.25191 107.96315 192.45373 107.14394 192.86334 106.67906 C
193.26699 106.21446 194.01902 105.98202 195.11943 105.98202 c
201.86957 105.98202 l
202.07735 105.98202 202.24857 105.90888 202.38917 105.76828 c
202.53600 105.62145 202.60913 105.45024 202.60913 105.24841 c
202.60913 102.90076 l
@c
211.18734 102.64989 m
211.18734 102.44835 211.12016 102.27713 210.97332 102.13030 c
210.83272 101.98970 210.65556 101.91628 210.45373 101.91628 c
206.83417 101.91628 l
206.63235 101.91628 206.46113 101.98970 206.31458 102.13030 C
206.17398 102.27713 206.10057 102.44835 206.10057 102.64989 c
206.10057 128.48202 l
206.10057 128.67165 206.16775 128.83663 206.30835 128.97128 C
206.44299 129.11187 206.62016 129.17906 206.83417 129.17906 c
210.45373 129.17906 l
210.65556 129.17906 210.83272 129.11187 210.97332 128.97128 C
211.12016 128.83663 211.18734 128.67165 211.18734 128.48202 c
211.18734 102.64989 l
@c
235.61943 120.66831 m
235.61943 118.79717 235.21578 117.21997 234.40252 115.94211 c
233.58954 114.66425 232.39106 113.69820 230.80762 113.04992 C
229.23014 112.39597 227.31647 112.07169 225.06633 112.07169 c
224.39991 112.07169 223.30545 112.12072 221.78920 112.21852 C
221.78920 102.64989 l
221.78920 102.44835 221.72825 102.27713 221.59361 102.13030 c
221.46520 101.98970 221.29398 101.91628 221.09216 101.91628 c
217.43603 101.91628 l
217.23420 101.91628 217.06299 101.98970 216.91644 102.13030 C
216.77584 102.27713 216.70243 102.44835 216.70243 102.64989 c
216.70243 127.88901 l
216.70243 128.28643 216.84302 128.57386 217.12422 128.75726 c
217.40542 128.94066 218.38365 129.10564 220.06517 129.25247 C
221.74044 129.39307 223.40948 129.46649 225.06633 129.46649 c
228.49654 129.46649 231.11320 128.75102 232.91688 127.32633 C
234.72057 125.89569 235.61943 123.78643 235.61943 120.99231 c
235.61943 120.66831 l
@c
230.56923 120.66831 m
230.56923 120.99231 l
230.56923 122.47200 230.12901 123.55398 229.26076 124.23260 C
228.38627 124.91745 226.99247 125.25392 225.06633 125.25392 c
223.89874 125.25392 222.80428 125.20488 221.78920 125.09490 C
221.78920 116.37014 L
223.16485 116.30268 224.25931 116.26611 225.06633 116.26611 c
226.95562 116.26611 228.34346 116.61449 229.23609 117.31153 C
230.12277 118.00857 230.56923 119.12740 230.56923 120.66831 c
@c
242.28369 109.51002 m
241.18923 105.03439 L
240.78586 103.33474 240.56561 102.44211 240.53528 102.35650 C
240.51061 102.26466 240.43124 102.16687 240.30283 102.06907 C
240.18066 101.96532 240.04602 101.91628 239.89918 101.91628 c
236.01685 101.91628 l
235.57039 101.91628 235.35043 102.12406 235.35043 102.54614 c
235.35043 102.56428 235.36261 102.62551 235.38699 102.72331 C
241.40324 125.72447 L
242.05153 128.21924 243.75118 129.46649 246.51468 129.46649 c
249.26003 129.46649 250.95345 128.21924 251.60173 125.72447 C
257.65455 102.54614 L
257.65455 102.12406 257.43458 101.91628 256.98813 101.91628 c
253.10580 101.91628 l
252.73276 101.91628 252.50031 102.11811 252.40252 102.52772 C
250.72129 109.51002 L
242.28369 109.51002 L
@c
249.73682 113.68602 m
247.85376 121.43849 L
247.29109 123.73143 246.97928 124.92964 246.90614 125.02148 C
246.83272 125.11928 246.70431 125.16831 246.51468 125.16831 c
246.22724 125.16831 246.05008 125.06428 245.98885 124.86246 C
243.26816 113.68602 L
249.73682 113.68602 L
@c
275.07969 113.36173 m
280.83317 102.64989 L
280.89439 102.57647 280.91877 102.48491 280.91877 102.36274 c
280.91877 102.06312 280.77194 101.91628 280.47231 101.91628 c
275.99698 101.91628 l
275.82576 101.91628 275.70331 101.97128 275.61770 102.07531 C
275.53833 102.18529 275.22028 102.73550 274.67008 103.72592 C
269.97449 112.45096 L
269.47304 112.45096 l
268.80661 112.45096 267.71216 112.49376 266.19591 112.59156 C
266.19591 102.64989 l
266.19591 102.44835 266.13496 102.27713 266.00031 102.13030 c
265.87191 101.98970 265.70069 101.91628 265.49887 101.91628 c
261.84274 101.91628 l
261.64091 101.91628 261.46970 101.98970 261.32315 102.13030 C
261.18255 102.27713 261.10913 102.44835 261.10913 102.64989 c
261.10913 127.88901 l
261.10913 128.28643 261.24973 128.57386 261.53093 128.75726 c
261.81213 128.94066 262.79036 129.10564 264.47187 129.25247 C
266.14715 129.39307 267.81619 129.46649 269.47304 129.46649 c
272.86639 129.46649 275.47115 128.76321 277.29298 127.36318 C
279.11509 125.95691 280.02614 123.89641 280.02614 121.16948 c
280.02614 120.85172 l
280.02614 117.17093 278.37524 114.67644 275.07969 113.36173 C
@c
274.97594 120.85172 m
274.97594 121.16948 l
274.97594 122.53294 274.52324 123.52961 273.61247 124.15323 C
272.70737 124.78309 271.32576 125.09490 269.47304 125.09490 c
268.30545 125.09490 267.21099 125.04586 266.19591 124.95430 C
266.19591 116.69414 L
267.57156 116.62072 268.66602 116.58387 269.47304 116.58387 c
271.49074 116.58387 272.91543 116.91411 273.74088 117.57458 C
274.56009 118.22882 274.97594 119.32299 274.97594 120.85172 c
@c
302.09159 125.57792 m
302.09159 125.13770 301.84724 124.91745 301.35798 124.91745 c
294.92589 124.91745 L
294.92589 102.64989 l
294.92589 102.44835 294.85871 102.27713 294.71187 102.13030 c
294.57128 101.98970 294.39411 101.91628 294.19228 101.91628 c
290.57272 101.91628 l
290.37090 101.91628 290.19969 101.98970 290.05313 102.13030 C
289.91254 102.27713 289.83912 102.44835 289.83912 102.64989 c
289.83912 124.91745 L
283.41326 124.91745 l
282.91805 124.91745 282.67342 125.13770 282.67342 125.57792 c
282.67342 128.48202 l
282.67342 128.67165 282.74683 128.83663 282.89339 128.97128 C
283.03398 129.11187 283.20520 129.17906 283.41326 129.17906 c
301.35798 129.17906 l
301.55981 129.17906 301.73698 129.11187 301.87786 128.97128 C
302.02441 128.83663 302.09159 128.67165 302.09159 128.48202 c
302.09159 125.57792 l
@c
310.69446 112.03512 m
310.69446 111.59490 310.46202 111.37493 309.99742 111.37493 c
302.81329 111.37493 l
302.32431 111.37493 302.07969 111.59490 302.07969 112.03512 c
302.07969 114.34620 l
302.07969 114.54803 302.15310 114.71924 302.29370 114.84765 C
302.43430 114.98202 302.61146 115.04324 302.81329 115.04324 c
309.99742 115.04324 l
310.46202 115.04324 310.69446 114.81080 310.69446 114.34620 c
310.69446 112.03512 l
@c
334.71666 112.84214 m
334.71666 109.24696 333.72028 106.48346 331.72696 104.53918 C
329.72769 102.60113 326.89077 101.62885 323.19780 101.62885 c
322.04239 101.62885 320.50148 101.69008 318.57562 101.80630 C
316.65572 101.92847 315.58564 102.09373 315.35943 102.30151 C
315.13946 102.50929 315.02948 102.81515 315.02948 103.20633 c
315.02948 127.88901 l
315.02948 128.28643 315.13946 128.58605 315.35348 128.79383 c
315.56750 129.00161 316.63729 129.16687 318.55720 129.28904 C
320.48306 129.40526 322.02992 129.46649 323.19780 129.46649 c
326.89077 129.46649 329.72769 128.49420 331.72696 126.55616 C
333.72028 124.61187 334.71666 121.84214 334.71666 118.23477 c
334.71666 112.84214 l
@c
329.66646 112.84214 m
329.66646 118.23477 l
329.66646 120.81487 329.09783 122.61260 327.96057 123.63364 C
326.82954 124.65468 325.23987 125.16831 323.19780 125.16831 c
322.68416 125.16831 321.65717 125.13146 320.11625 125.05805 C
320.11625 106.01887 L
321.65717 105.94545 322.68416 105.90888 323.19780 105.90888 c
325.45389 105.90888 327.09855 106.48346 328.12583 107.63291 C
329.15282 108.77641 329.66646 110.51263 329.66646 112.84214 c
@c
354.13540 102.90076 m
354.13540 102.60113 354.05575 102.40554 353.90920 102.30151 c
353.76236 102.19748 352.99191 102.06312 351.61030 101.89191 C
350.22217 101.71446 348.49814 101.62885 346.43169 101.62885 c
343.32548 101.62885 341.13685 102.24652 339.86494 103.48157 C
338.59332 104.72258 337.95751 106.60592 337.95751 109.13698 c
337.95751 121.93994 l
337.95751 124.48346 338.59332 126.37871 339.86494 127.61376 c
341.13685 128.84882 343.32548 129.46649 346.43169 129.46649 c
348.14948 129.46649 349.80038 129.38088 351.38409 129.21562 c
352.96753 129.05065 353.81735 128.89786 353.94576 128.76945 C
354.06794 128.63480 354.13540 128.43921 354.13540 128.17644 c
354.13540 125.82850 l
354.13540 125.62668 354.06198 125.45546 353.92139 125.30891 C
353.77455 125.16831 353.60334 125.09490 353.40151 125.09490 c
345.91181 125.09490 l
344.79921 125.09490 344.04094 124.86246 343.62510 124.39786 C
343.21550 123.93326 343.00772 123.11376 343.00772 121.93994 c
343.00772 117.98419 L
352.94910 117.98419 l
353.15717 117.98419 353.32838 117.91077 353.46898 117.77017 c
353.61553 117.62334 353.68299 117.45213 353.68299 117.25030 c
353.68299 114.61521 l
353.68299 114.41339 353.61553 114.24217 353.46898 114.09562 c
353.32838 113.95502 353.15717 113.88161 352.94910 113.88161 c
343.00772 113.88161 L
343.00772 109.13698 l
343.00772 107.96315 343.21550 107.14394 343.62510 106.67906 C
344.04094 106.21446 344.79921 105.98202 345.91181 105.98202 c
353.40151 105.98202 l
353.60334 105.98202 353.77455 105.90888 353.92139 105.76828 C
354.06198 105.62145 354.13540 105.45024 354.13540 105.24841 c
354.13540 102.90076 l
@c
373.04617 124.73405 m
370.36205 124.97868 367.95317 125.09490 365.82548 125.09490 c
363.25757 125.09490 361.97348 124.22665 361.97348 122.49638 c
361.97348 121.79310 362.22435 121.21228 362.71956 120.75987 c
363.21477 120.30746 363.78935 119.89162 364.44983 119.52482 C
369.39005 116.76756 L
371.15093 115.80151 372.43474 114.73767 373.25395 113.58822 C
374.07345 112.43254 374.47682 111.00189 374.47682 109.29600 c
374.47682 107.77975 374.11002 106.43471 373.37641 105.25465 C
372.64280 104.08054 371.55430 103.18195 370.11742 102.55833 C
368.68082 101.94066 366.91994 101.62885 364.84101 101.62885 c
363.14759 101.62885 361.60072 101.73288 360.20041 101.93471 C
358.80661 102.13625 358.02992 102.31994 357.87713 102.49115 C
357.71811 102.65613 357.64469 102.82734 357.64469 103.01074 c
357.64469 105.65802 l
357.64469 105.85389 357.71216 106.01263 357.84652 106.15323 C
357.98712 106.28787 358.15238 106.36129 358.34173 106.36129 c
358.41515 106.36129 L
359.10595 106.27569 360.18227 106.19008 361.63729 106.11043 C
363.09260 106.02482 364.18677 105.98202 364.91443 105.98202 c
366.38192 105.98202 367.45795 106.23288 368.13657 106.73433 C
368.82142 107.23550 369.15761 108.09156 369.15761 109.29600 c
369.15761 110.07241 368.91298 110.70227 368.42400 111.17906 c
367.93474 111.65613 367.37235 112.08416 366.74249 112.46910 C
361.20926 115.78309 L
359.71143 116.66353 358.61698 117.62334 357.91994 118.66280 c
357.22290 119.70227 356.87452 120.98013 356.87452 122.49638 c
356.87452 127.14293 359.93140 129.46649 366.04545 129.46649 c
367.34173 129.46649 368.83361 129.37465 370.51483 129.18501 C
372.19011 129.00161 373.15020 128.83663 373.38860 128.69603 C
373.62699 128.54920 373.74321 128.35361 373.74321 128.10302 c
373.74321 125.40047 l
373.74321 124.96025 373.53543 124.73405 373.11959 124.73405 c
373.04617 124.73405 L
@c
383.97203 102.64989 m
383.97203 102.44835 383.90485 102.27713 383.75802 102.13030 c
383.61742 101.98970 383.44025 101.91628 383.23843 101.91628 c
379.61887 101.91628 l
379.41704 101.91628 379.24583 101.98970 379.09928 102.13030 C
378.95868 102.27713 378.88526 102.44835 378.88526 102.64989 c
378.88526 128.48202 l
378.88526 128.67165 378.95244 128.83663 379.09304 128.97128 C
379.22769 129.11187 379.40485 129.17906 379.61887 129.17906 c
383.23843 129.17906 l
383.44025 129.17906 383.61742 129.11187 383.75802 128.97128 C
383.90485 128.83663 383.97203 128.67165 383.97203 128.48202 c
383.97203 102.64989 l
@c
407.27282 103.13291 m
407.27282 102.80296 407.16283 102.55833 406.93663 102.39931 C
406.71043 102.24652 405.82403 102.07531 404.27717 101.89786 c
402.73030 101.72069 400.83477 101.62885 398.59087 101.62885 c
395.87613 101.62885 393.55909 102.60113 391.63918 104.55137 C
389.71332 106.49565 388.75323 109.27162 388.75323 112.87899 c
388.75323 118.16135 l
388.75323 121.81776 389.68866 124.61187 391.55981 126.55616 c
393.42444 128.49420 395.80299 129.46649 398.69490 129.46649 c
400.71260 129.46649 402.55909 129.35622 404.22813 129.14220 C
405.90340 128.92847 406.82665 128.76945 407.00381 128.65946 C
407.18721 128.54920 407.27282 128.34142 407.27282 128.03556 c
407.27282 125.57792 l
407.27282 125.06428 407.02847 124.80746 406.53921 124.80746 c
406.43518 124.80746 L
404.17909 124.99710 401.59899 125.09490 398.69490 125.09490 c
397.20302 125.09490 396.02920 124.50784 395.16690 123.32778 C
394.30488 122.15395 393.87685 120.42964 393.87685 118.16135 c
393.87685 112.87899 l
393.87685 110.65946 394.31707 108.95357 395.20375 107.76756 C
396.08419 106.57531 397.21521 105.98202 398.59087 105.98202 c
399.87496 105.98202 401.08535 106.01887 402.20447 106.09228 C
402.20447 115.45909 l
402.20447 115.66063 402.27165 115.83184 402.41225 115.97868 c
402.54661 116.11928 402.71187 116.19269 402.90746 116.19269 c
406.53921 116.19269 l
406.74104 116.19269 406.91820 116.11928 407.05880 115.97868 c
407.20564 115.83184 407.27282 115.66063 407.27282 115.45909 c
407.27282 103.13291 l
@c
433.39238 103.38378 m
433.39238 102.98013 433.24554 102.63175 432.95216 102.34431 C
432.66472 102.05688 432.31635 101.91628 431.92488 101.91628 c
428.21972 101.91628 l
427.64513 101.91628 427.19868 101.98970 426.87468 102.13030 C
426.55068 102.27713 426.25106 102.64394 425.97609 103.24318 C
417.82592 121.10230 L
417.73408 121.29194 417.62409 121.38973 417.50787 121.38973 c
417.38570 121.38973 417.32447 121.29194 417.32447 121.10230 c
417.32447 102.64989 l
417.32447 102.44835 417.25729 102.27713 417.12265 102.13030 C
416.98205 101.98970 416.81707 101.91628 416.62743 101.91628 c
413.50932 101.91628 l
413.30750 101.91628 413.13628 101.98970 412.98973 102.13030 C
412.84913 102.27713 412.77572 102.44835 412.77572 102.64989 c
412.77572 127.71156 l
412.77572 128.11521 412.92227 128.46359 413.20970 128.75102 C
413.49090 129.03846 413.83956 129.17906 414.24293 129.17906 c
418.20491 129.17906 l
418.65732 129.17906 418.99380 129.08126 419.20753 128.89162 c
419.42154 128.70227 419.62337 128.40265 419.81896 127.99899 C
428.36031 109.13698 L
428.44592 108.94139 428.53776 108.84954 428.64775 108.84954 c
428.77616 108.84954 428.84334 108.95981 428.84334 109.19197 c
428.84334 128.48202 l
428.84334 128.94661 429.07578 129.17906 429.54038 129.17906 c
432.69534 129.17906 l
433.15994 129.17906 433.39238 128.94661 433.39238 128.48202 c
433.39238 103.38378 l
@c
F

@rax %Note: Object
438.47943 101.66570 488.43751 129.42964 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.6863 0.9373  create_rgb_color set_solid_fill
441.62816 102.68674 m
441.62816 102.48491 441.56693 102.31370 441.43228 102.16687 C
441.30416 102.02627 441.13294 101.95285 440.93112 101.95285 c
439.17619 101.95285 l
438.99902 101.95285 438.83405 102.02627 438.69317 102.16687 C
438.55257 102.31370 438.47943 102.48491 438.47943 102.68674 c
438.47943 106.09228 l
438.47943 106.28164 438.54661 106.44690 438.68721 106.58126 C
438.82157 106.72186 438.98683 106.78932 439.17619 106.78932 c
440.93112 106.78932 l
441.12047 106.78932 441.28573 106.72186 441.42633 106.59345 C
441.56069 106.45909 441.62816 106.29411 441.62816 106.09228 c
441.62816 102.68674 l
@c
458.68025 113.88161 m
465.36293 102.72331 L
465.43635 102.61332 465.47291 102.50929 465.47291 102.39931 c
465.47291 102.07531 465.31389 101.91628 465.00831 101.91628 c
462.64224 101.91628 l
462.44041 101.91628 462.28139 101.92847 462.17735 101.95285 C
462.06737 101.97751 461.97581 102.03250 461.89616 102.12406 C
461.82274 102.20967 461.33376 102.99855 460.43490 104.47795 C
455.13411 113.32517 L
454.16806 113.32517 l
453.37918 113.32517 452.03414 113.36173 450.13890 113.43515 C
450.13890 102.64989 l
450.13890 102.46054 450.07767 102.28932 449.94926 102.14249 C
449.82709 101.98970 449.66806 101.91628 449.47247 101.91628 c
447.50353 101.91628 l
447.31417 101.91628 447.15515 101.98970 447.03298 102.13030 C
446.90457 102.27713 446.84334 102.44835 446.84334 102.64989 c
446.84334 128.33518 l
446.84334 128.73260 446.99017 128.97128 447.28951 129.06283 c
447.58913 129.15468 448.48800 129.23405 449.98583 129.31342 c
451.48394 129.39307 452.87802 129.42964 454.16806 129.42964 c
461.02195 129.42964 464.45187 126.80079 464.45187 121.54876 c
464.45187 121.27975 l
464.45187 119.40265 463.95043 117.82517 462.95405 116.54107 c
461.95739 115.25726 460.53269 114.37058 458.68025 113.88161 C
@c
461.13817 121.27975 m
461.13817 121.54876 l
461.13817 123.32778 460.56954 124.58721 459.44447 125.32110 C
458.31345 126.05471 456.55852 126.42151 454.16806 126.42151 c
452.04038 126.42151 450.70129 126.38494 450.13890 126.31153 C
450.13890 116.26611 L
452.26658 116.21707 453.60539 116.19269 454.16806 116.19269 c
456.71159 116.19269 458.50904 116.59011 459.56069 117.39118 c
460.61235 118.19197 461.13817 119.48825 461.13817 121.27975 c
@c
488.43751 111.82110 m
488.43751 105.05282 485.30693 101.66570 479.04605 101.66570 c
472.79140 101.66570 469.66110 105.05282 469.66110 111.82110 c
469.66110 128.48202 l
469.66110 128.67165 469.72828 128.83663 469.85669 128.97128 c
469.99106 129.11187 470.15631 129.17906 470.35814 129.17906 c
472.33276 129.17906 l
472.52239 129.17906 472.68737 129.11187 472.82202 128.97128 C
472.96261 128.83663 473.02980 128.67165 473.02980 128.48202 c
473.02980 111.82110 l
473.02980 109.35099 473.48220 107.51669 474.39326 106.31225 C
475.29808 105.11405 476.85118 104.51480 479.04605 104.51480 c
481.14935 104.51480 482.67780 105.07720 483.63165 106.20850 C
484.59175 107.33329 485.06854 109.20416 485.06854 111.82110 c
485.06854 128.48202 l
485.06854 128.67165 485.12976 128.83663 485.26413 128.97128 C
485.39254 129.11187 485.56375 129.17906 485.76557 129.17906 c
487.73424 129.17906 l
487.92983 129.17906 488.08885 129.11187 488.22945 128.97128 c
488.36409 128.83663 488.43751 128.67165 488.43751 128.48202 c
488.43751 111.82110 l
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel16Dict 16.0 0
%%EOF
